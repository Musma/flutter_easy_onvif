name: easy_onvif_workspace
repository: https://github.com/faithoflifedev/easy_onvif_workspace

packages:
  - packages/**

command:
  version:
    branch: main
    message: "chore(release): publish %s"

bootstrap:
  runPubGetInParallel: false
  usePubspecOverrides: true

scripts:
  lint:all:
    run: melos run analyze && melos run format
    description: Run all static analysis checks.

  # publish:all:
  #   run: melos run publish:dart && melos run publish:flutter
  #   description: Run publish for all packages.

  prep:
    # run: melos run build && melos run meta && melos run markdown && melos run format && melos run analyze
    run: melos run meta && melos run markdown && melos run format && melos run analyze
    description: Run prep steps for dart and flutter.

  # prep:flutter:
  #   run: melos run build && melos run meta && melos run markdown && melos run analyze && melos run format
  #   description: Run prep steps Flutter.

  ## TODO: Add commit steps for Dart and Flutter packages.

  commit:lib:
    run: melos exec --ignore="easy_onvif_cli" git add .; git commit -m "$(cat packages/easy_onvif/tool/publish_tools.yaml | yq -r '.commit')"; git push origin main
    description: Commit changes for lib package.

  commit:cli:
    run: melos exec--ignore="easy_onvif" git add .; git commit -m "$(cat packages/easy_onvif_cli/tool/publish_tools.yaml | yq -r '.commit')"; git push origin main
    description: Commit changes for Flutter package.

  publish:real:cli:
    run: melos exec --ignore="easy_onvif" dart pub publish --force
    description: Real publish for onvif cli Package.

  publish:real:lib:
    run: melos exec --ignore="onvif_cli" dart pub publish --force
    description: Real publish for easy_onvif library Package.

  # publish:cli:
  #   run: melos run meta && melos run analyze && melos run format && melos run markdown && melos run dryrun:flutter
  #   description: Run `dart publish` for all packages.melos

  dryrun:lib:
    run: melos exec --ignore="easy_onvif_cli" dart pub publish --dry-run
    description: Run `dart pub publish --dry-run` for lib package.

  dryrun:cli:
    run: melos exec --ignore="easy_onvif" dart pub publish --dry-run
    description: Run `dart pub publish --dry-run` for cli package.

  # build:
  #   run: melos exec --ignore="packages/easy_onvif_cli" dart run build_runner build --delete-conflicting-outputs
  #   select-package:
  #     depends-on: build_runner

  analyze:
    exec: dart analyze .
    description: Run `dart analyze` in all packages.

  format:
    run: melos exec dart format . --fix
    description: Run `dart format` for all packages.

  format-check:
    run: melos exec dart format . --set-exit-if-changed
    description: Run `dart format` checks for all packages.

  dartdoc:
    run: melos exec dart doc .
    description: Run dartdoc checks for all packages.

  markdown:
    run: melos exec grind 'pt-markdown'
    description: Run markdown generator for all packages.

  meta:
    run: melos exec grind 'pt-meta'
    description: Run metadata generator for all packages.

  pana:
    run: melos exec pana --no-dartdoc .
    description: Run pana checks for all packages.

  # clean:deep:
  #   run: git clean -x -d -f -q
  #   description: Clean things very deeply, can be used to establish "pristine checkout" status.
